name: pythonapp123-CICD

on:
  push:
    branches: [main]
    paths:
      - "src/**"

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Set short SHA
        shell: bash
        run: echo "SHORT_SHA=${GITHUB_SHA::6}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: prachponleuuch/pythonapp123:${{ env.SHORT_SHA }}
    outputs:
      commit_id: ${{ env.SHORT_SHA }}
  CD:
    needs: [CI]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Modify values.yaml
        shell: bash
        run: |
          echo ${{ needs.ci.outputs.commit_id }}
          pip install yq
          yq -Yi '.image.tag = "${{ needs.ci.outputs.commit_id }}"' charts/pythonapp123/values-dev.yaml

      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update image tag to ${{ needs.ci.outputs.commit_id }}"

      - name: Install ArgoCD CLI
        shell: bash
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/
          
      - name: ArgoCD Login
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure \
            --grpc-web \
            --username admin \
            --password ${{ secrets.ARGOCD_PASSWORD }}

      - name: Ensure/Add ArgoCD Repository and App
        shell: bash
        run: |
          repo='https://github.com/Alex-Uch/pythonapp123.git'
          argocd repo list  | grep -q "$repo" || \
          argocd repo add "$repo"
          argocd app get pythonapp123  || \
          argocd app create pythonapp123 \
            --repo "$repo" \
            --path charts/pythonapp123 \
            --dest-namespace dev \
            --dest-server https://kubernetes.default.svc \
            --values values-dev.yaml \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: ArgoCD App Sync
        shell: bash
        run: |
          argocd app sync pythonapp123
          argocd app wait pythonapp123 --timeout 180
